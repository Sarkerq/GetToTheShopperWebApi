<UserControl x:Class="GetToTheShopper.Clients.Seller.View.EditShopDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GetToTheShopper.Clients.Seller.View"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
			 xmlns:validators="clr-namespace:GetToTheShopper.Clients.Seller.ValidationRules"
			 xmlns:validatorsCore="clr-namespace:GetToTheShopper.Clients.Core.ValidationRules;assembly=GetToTheShopper.Clients.Core"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" Height="248.546" Width="428.325" Margin="10">
	<UserControl.Resources>
        <validators:CheckIfShopNameExists x:Key="CheckIfShopNameExists"/>
        <validatorsCore:CheckName x:Key="CheckName"/>
    </UserControl.Resources>

    <Grid Name="GridContent">
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" Margin="10" TextWrapping="Wrap" Text="Name" VerticalAlignment="Center"/>
            <TextBox x:Name="nameTextBox" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" Margin="10" TextWrapping="Wrap" VerticalAlignment="Center" Width="120" Height="30">
                <TextBox.Text>
                    <Binding Path="Shop.Name"  UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <validators:CheckIfShopNameExists Message="Name already used" FirstSieveMessage ="Name cannot be empty"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" Margin="10" TextWrapping="Wrap" Text="Address" VerticalAlignment="Center"/>
            <TextBox x:Name="addressTextBox" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Margin="10" TextWrapping="Wrap" VerticalAlignment="Center" Width="120" Height="30" Text="{Binding Shop.Address}" />
        </Grid>
        <Button Grid.Row="1" Content="Select on map" HorizontalAlignment="Center" Command="{Binding SelectFromMapCommand}"/>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Cancel" HorizontalAlignment="Center" Margin="10" VerticalAlignment="Bottom" Width="75" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                <Button.CommandParameter>
                    <system:Boolean>False</system:Boolean>
                </Button.CommandParameter>
            </Button>
            <Button Grid.Column="1" Content="{Binding AcceptDialogText}" HorizontalAlignment="Center" Margin="10" VerticalAlignment="Bottom" Width="75"  IsDefault="True" 
            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                <Button.CommandParameter>
                    <system:Boolean>True</system:Boolean>
                </Button.CommandParameter>
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=nameTextBox, Path=(Validation.HasError)}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Grid>
    
	
</UserControl>
