<UserControl x:Class="GetToTheShopper.Clients.Seller.View.EditShopProductDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:GetToTheShopper.Clients.Seller.View"
   			 xmlns:validators="clr-namespace:GetToTheShopper.Clients.Seller.ValidationRules"
			 xmlns:validatorsCore="clr-namespace:GetToTheShopper.Clients.Core.ValidationRules;assembly=GetToTheShopper.Clients.Core"
			 xmlns:helpers="clr-namespace:GetToTheShopper.Clients.Core.View.Helpers;assembly=GetToTheShopper.Clients.Core"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:system="clr-namespace:System;assembly=mscorlib"
			 mc:Ignorable="d" 
             Height="500" Width="700">
	<UserControl.Resources>
		<validators:CheckIfProductNameExists x:Key="CheckIfProductNameExists"/>
		<validatorsCore:CheckPriceRange x:Key="CheckPriceRange"/>
		<validatorsCore:CheckName x:Key="CheckName"/>
		<helpers:BoolToVisibilityConverter x:Key="BoolToVis" />

	</UserControl.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<!--<ColumnDefinition Width="2*" />-->
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*"/>

		</Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
		<!--<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="*"/>

			<RowDefinition Height="*"/>
			<RowDefinition Height="5*"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBox Name="TextBoxSearch" FontSize="20" Margin="30, 10" materialDesign:HintAssist.Hint="Search">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyUp">
                        <i:InvokeCommandAction Command="{Binding FilterProductsCommand}" CommandParameter="{Binding Text, ElementName=TextBoxSearch}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Grid.Row="1" Margin="0,100,0,0" Text="Sorry, we haven't got what your are looking for..." HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="{Binding NoProductsFound, Converter={StaticResource BoolToVis}}"/>
            <ListView Name="ListViewProducts" Grid.Row="1" VerticalAlignment="Top" Margin="10" ItemsSource="{Binding ProductsList}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding ChooseProductCommand}" CommandParameter="{Binding SelectedItem, ElementName=ListViewProducts}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}"/>
                        <GridViewColumn Header="Unit" DisplayMemberBinding="{Binding Unit.Name}"/>
                        <GridViewColumn Header="Price for unit" DisplayMemberBinding="{Binding Price, StringFormat={}{0:N2} zł}"/>
                    </GridView>
                </ListView.View>
            </ListView>

        </Grid>
        <Grid Grid.Column="1" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <TextBlock HorizontalAlignment="Right" TextAlignment="Right" Margin="10" 
				   TextWrapping="Wrap" Text="Product" VerticalAlignment="Center"/>
            <TextBlock Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" TextAlignment="Right" Margin="10" 
				   TextWrapping="Wrap" Text="{Binding ShopProduct.Product.Name}" VerticalAlignment="Center" FontWeight="Bold"/>

            <TextBlock Grid.Row="1" HorizontalAlignment="Right" TextAlignment="Right" Margin="10" 
				   TextWrapping="Wrap" VerticalAlignment="Center">
                Available quantity <LineBreak/> (in proper unit)
            </TextBlock>
            <TextBox x:Name="quantityTextBox"  Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" Height="30" Margin="10" TextWrapping="Wrap"
                 VerticalAlignment="Center" Width="120" >
                <TextBox.Text>
                    <Binding Path="ShopProduct.AvailableUnits"  UpdateSourceTrigger="PropertyChanged"  NotifyOnValidationError="True" StringFormat="N2">
                        <Binding.ValidationRules>
                            <validatorsCore:CheckPriceRange Min="0" Message="Please put non-negative quantity"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Grid.Row="2" HorizontalAlignment="Right" TextAlignment="Right" Margin="10" TextWrapping="Wrap" Text="Aisle" VerticalAlignment="Center"/>
            <TextBox x:Name="aisleTextBox"  Grid.Column="2" Grid.Row="2" HorizontalAlignment="Left" Height="30" Margin="10" TextWrapping="Wrap"
                VerticalAlignment="Center" Width="120">
                <TextBox.Text>
                    <Binding Path="ShopProduct.Aisle"  UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <validatorsCore:CheckName Message="Aisle cannot be empty"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <Button Grid.Column="0" Grid.Row="1" Content="Cancel" HorizontalAlignment="Center" Margin="10" VerticalAlignment="Bottom" Width="75" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
			<Button.CommandParameter>
				<system:Boolean>False</system:Boolean>
			</Button.CommandParameter>
		</Button>
		<Button Grid.Column="1" Grid.Row="1" Content="{Binding AcceptDialogText}" HorizontalAlignment="Center" Margin="10" VerticalAlignment="Bottom" Width="75"  IsDefault="True" 
            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
			<!--
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"-->
			<Button.CommandParameter>
				<system:Boolean>True</system:Boolean>
			</Button.CommandParameter>
			<Button.Style>
				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
					<Setter Property="IsEnabled" Value="false" />
					<Style.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsProductNull}" Value="false" />
                            </MultiDataTrigger.Conditions>
							<Setter Property="IsEnabled" Value="true" />
						</MultiDataTrigger>
					</Style.Triggers>
				</Style>
			</Button.Style>
		</Button>
	</Grid>
</UserControl>
