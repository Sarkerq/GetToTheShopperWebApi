<UserControl x:Class="GetToTheShopper.Clients.Seller.View.SignUpDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GetToTheShopper.Clients.Seller.View"
			 xmlns:validatorsCore="clr-namespace:GetToTheShopper.Clients.Core.ValidationRules;assembly=GetToTheShopper.Clients.Core"
			 xmlns:system="clr-namespace:System;assembly=mscorlib"
			 xmlns:ff="clr-namespace:GetToTheShopper.Clients.Core.Extensions;assembly=GetToTheShopper.Clients.Core"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="1280"
			 xmlns:coreHelpers="clr-namespace:GetToTheShopper.Clients.Core.View.Helpers;assembly=GetToTheShopper.Clients.Core"
             >
    <UserControl.Resources>
        <coreHelpers:BoolToVisibilityConverter x:Key="BoolToVis" />
        <validatorsCore:CheckPriceRange x:Key="CheckPriceRange"/>
		<validatorsCore:CheckName x:Key="CheckName"/>
	</UserControl.Resources>
	<Grid>
		<Grid.Background>
			<ImageBrush ImageSource="/strawberries.jpeg" Stretch="UniformToFill"/>
		</Grid.Background>
		<materialDesign:Card VerticalAlignment="Center" HorizontalAlignment="Center" >
			<Grid Margin="25">
				<Grid.RowDefinitions>
					<RowDefinition Height="60"/>
					<RowDefinition Height="240"/>

					<RowDefinition Height="auto"/>
				</Grid.RowDefinitions>
				<TextBlock Grid.Row="0" Text="Sign Up" FontSize="30" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
				<Grid Grid.Row="1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="*"/>
						<RowDefinition Height="*"/>
						<RowDefinition Height="2*"/>

					</Grid.RowDefinitions>
					<TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" Margin="10" TextWrapping="Wrap" Text="Login" VerticalAlignment="Center"/>
					<TextBox x:Name="loginTextBox"  Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Width="120" Height="30">
						<TextBox.Text>
							<Binding Path="RegistrationData.Login"  UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
								<Binding.ValidationRules>
									<validatorsCore:CheckName  Message="Login cannot be empty"/>
								</Binding.ValidationRules>
							</Binding>
						</TextBox.Text>
					</TextBox>
					<TextBlock Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" TextAlignment="Right" Margin="10" TextWrapping="Wrap" Text="Password" VerticalAlignment="Center"/>
					<PasswordBox Grid.Column="1" Grid.Row="1" x:Name="passwordBox" ff:PasswordBoxAssistant.BindPassword="true"  
								 ff:PasswordBoxAssistant.BoundPassword="{Binding Path=RegistrationData.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
								 VerticalContentAlignment="Stretch" VerticalAlignment="Center"/>

					<TextBlock Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" TextAlignment="Right" Margin="10" TextWrapping="Wrap" Text="Confirm Password" VerticalAlignment="Center"/>
					<PasswordBox Grid.Column="1" Grid.Row="2" x:Name="confirmPasswordBox" ff:PasswordBoxAssistant.BindPassword="true"  
								 ff:PasswordBoxAssistant.BoundPassword="{Binding Path=RegistrationData.ConfirmPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
								 VerticalContentAlignment="Stretch" VerticalAlignment="Center"/>


					<StackPanel Grid.Row="3" Grid.ColumnSpan="2" Orientation="Vertical">
						<ProgressBar Name="ProgressBar" Margin="12" HorizontalAlignment="Center" VerticalAlignment="Center" IsIndeterminate="{Binding Progress}" Style="{StaticResource MaterialDesignCircularProgressBar}" Value="0" />
						<Button Content="Sign up" Command="{Binding SignUpCommand}">
							<Button.Style>
								<Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
									<Setter Property="IsEnabled" Value="True" />
									<Style.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition Binding="{Binding ElementName=nameTextBox, Path=(Validation.HasError)}" Value="false" />
												<Condition Binding="{Binding ElementName=passwordBox, Path=(Validation.HasError)}" Value="false" />
											</MultiDataTrigger.Conditions>
											<Setter Property="IsEnabled" Value="False" />
										</MultiDataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>
                        <TextBlock Text="Sign up failed" HorizontalAlignment="Center" Foreground="#C62828" Visibility="{Binding SignUpFailed, Converter={StaticResource BoolToVis}}" />
                    </StackPanel>
				</Grid>
			</Grid>
		</materialDesign:Card>
	</Grid>
</UserControl>
